syntax = "proto3";

package profile;

// üë§ Profile Service - handles user profiles and authentication
service ProfileService {
  // User Management
  rpc CreateUser(CreateUserRequest) returns (UserResponse);
  rpc GetUser(GetUserRequest) returns (UserResponse);
  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  
  // Authentication
  rpc LoginUser(LoginRequest) returns (LoginResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (LoginResponse);
  rpc LogoutUser(LogoutRequest) returns (LogoutResponse);
  
  // Profile Management
  rpc UpdateProfile(UpdateProfileRequest) returns (ProfileResponse);
  rpc GetProfile(GetProfileRequest) returns (ProfileResponse);
  rpc UploadAvatar(UploadAvatarRequest) returns (AvatarResponse);
  
  // User Relationships
  rpc GetUserConnections(GetConnectionsRequest) returns (GetConnectionsResponse);
  rpc SearchUsers(SearchUsersRequest) returns (SearchUsersResponse);
}

// üìù REQUEST MESSAGES

message CreateUserRequest {
  string email = 1;
  string password = 2;
  string username = 3;
  optional string first_name = 4;
  optional string last_name = 5;
  optional string avatar_url = 6;
}

message GetUserRequest {
  string user_id = 1;
}

message GetUsersRequest {
  repeated string user_ids = 1;
  optional int32 limit = 2;
  optional int32 offset = 3;
}

message UpdateUserRequest {
  string user_id = 1;
  optional string email = 2;
  optional string username = 3;
  optional string first_name = 4;
  optional string last_name = 5;
  optional string avatar_url = 6;
  optional UserStatus status = 7;
}

message DeleteUserRequest {
  string user_id = 1;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message RefreshTokenRequest {
  string refresh_token = 1;
}

message LogoutRequest {
  string user_id = 1;
  string access_token = 2;
}

message UpdateProfileRequest {
  string user_id = 1;
  optional string bio = 2;
  optional string location = 3;
  optional string website = 4;
  optional string phone = 5;
  optional string timezone = 6;
  optional string language = 7;
  optional UserPrivacy privacy = 8;
}

message GetProfileRequest {
  string user_id = 1;
  optional string requesting_user_id = 2;
}

message UploadAvatarRequest {
  string user_id = 1;
  bytes image_data = 2;
  string content_type = 3;
}

message GetConnectionsRequest {
  string user_id = 1;
  optional int32 limit = 2;
  optional int32 offset = 3;
}

message SearchUsersRequest {
  string query = 1;
  optional int32 limit = 2;
  optional int32 offset = 3;
  repeated UserStatus status_filter = 4;
}

// üì§ RESPONSE MESSAGES

message UserResponse {
  bool success = 1;
  optional string error = 2;
  optional User user = 3;
}

message GetUsersResponse {
  bool success = 1;
  optional string error = 2;
  repeated User users = 3;
  int32 total_count = 4;
}

message DeleteUserResponse {
  bool success = 1;
  optional string error = 2;
  string user_id = 3;
}

message LoginResponse {
  bool success = 1;
  optional string error = 2;
  optional string access_token = 3;
  optional string refresh_token = 4;
  optional User user = 5;
  optional int64 expires_in = 6;
}

message LogoutResponse {
  bool success = 1;
  optional string error = 2;
  string message = 3;
}

message ProfileResponse {
  bool success = 1;
  optional string error = 2;
  optional UserProfile profile = 3;
}

message AvatarResponse {
  bool success = 1;
  optional string error = 2;
  optional string avatar_url = 3;
}

message GetConnectionsResponse {
  bool success = 1;
  optional string error = 2;
  repeated UserConnection connections = 3;
  int32 total_count = 4;
}

message SearchUsersResponse {
  bool success = 1;
  optional string error = 2;
  repeated User users = 3;
  int32 total_count = 4;
}

// üèóÔ∏è DATA MODELS

message User {
  string user_id = 1;
  string email = 2;
  string username = 3;
  optional string first_name = 4;
  optional string last_name = 5;
  optional string avatar_url = 6;
  UserStatus status = 7;
  string created_at = 8;
  string updated_at = 9;
  optional string last_login_at = 10;
  bool email_verified = 11;
}

message UserProfile {
  string user_id = 1;
  string email = 2;
  string username = 3;
  optional string first_name = 4;
  optional string last_name = 5;
  optional string avatar_url = 6;
  optional string bio = 7;
  optional string location = 8;
  optional string website = 9;
  optional string phone = 10;
  optional string timezone = 11;
  optional string language = 12;
  UserStatus status = 13;
  UserPrivacy privacy = 14;
  string created_at = 15;
  string updated_at = 16;
  optional string last_login_at = 17;
  bool email_verified = 18;
}

message UserConnection {
  string user_id = 1;
  string connected_user_id = 2;
  ConnectionType connection_type = 3;
  string created_at = 4;
  User user = 5;
}

// üè∑Ô∏è ENUMS

enum UserStatus {
  USER_STATUS_ACTIVE = 0;
  USER_STATUS_INACTIVE = 1;
  USER_STATUS_SUSPENDED = 2;
  USER_STATUS_DELETED = 3;
}

enum UserPrivacy {
  USER_PRIVACY_PUBLIC = 0;
  USER_PRIVACY_FRIENDS = 1;
  USER_PRIVACY_PRIVATE = 2;
}

enum ConnectionType {
  CONNECTION_TYPE_FRIEND = 0;
  CONNECTION_TYPE_FOLLOWER = 1;
  CONNECTION_TYPE_FOLLOWING = 2;
  CONNECTION_TYPE_BLOCKED = 3;
} 