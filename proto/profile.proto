syntax = "proto3";

import "google/protobuf/struct.proto";

package profile;


// üë§ Profile Service - handles user profiles and user management
service ProfileService {
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc Login(LoginRequest) returns (AuthResponse);
  rpc SendOtp(SendOtpRequest) returns (SendOtpResponse);
  rpc VerifyOtp(VerifyOtpRequest) returns (SendOtpResponse);
  rpc Logout(LogoutRequest) returns (SendOtpResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);

  rpc GetRoles(EmptyRequest) returns (CommonResponseArray);
  
  // User Management
  rpc GetUser(GetUserRequest) returns (UserResponse);
  rpc GetBusinessUser(GetUserRequest) returns (BusinessUserResponse);
  rpc GetUserByEmail(GetUserByEmailRequest) returns (GetUserByEmailResponse);
  rpc UpdateUserStatus(UpdateUserStatusRequest) returns (UpdateUserStatusResponse);
  rpc GetUserContacts(GetUserContactsRequest) returns (GetUserContactsResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);

}

message CommonResponseArray {
  bool success = 1;
  string message = 2;
  int32 status = 3;
  repeated google.protobuf.Struct data = 4;
}


// üìù REQUEST MESSAGES

message EmptyRequest {}

message RegisterResponse {
  bool success = 1;
  optional string error = 2;
  optional string message = 3;
  optional string authToken = 4;
}

message Role {
  string roleId = 1;
  string roleName = 2;
  bool isActive = 3;
}

message GetRolesResponse {
  repeated Role roles = 1;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message SendOtpRequest {
  string token = 1;
  SendOtpType type = 2;
}

message VerifyOtpRequest {
  string token = 1;
  string otp = 2;
  SendOtpType type = 3;
}

message SendOtpResponse {
  bool success = 1;
  optional string error = 2;
  optional string message = 3;
}

message RefreshTokenResponse {
  bool success = 1;
  User user = 2;
  string accessToken = 3;
}



message AuthResponse {
  bool success = 1;
  optional string error = 2;
  User user = 3;
  string accessToken = 4;
}

message RegisterRequest {
  string email = 1;
  string password = 2;
  string phoneNumber = 3;
  string companyRef = 4;
  ROLES_ENUM roleName = 5;
}


enum ROLES_ENUM {
  CLIENT = 0;
  BUSINESS_USER = 1;
  STAFF = 2;
}

message LogoutRequest {
  string userId = 1;
}

message RefreshTokenRequest {
  string userId = 1;
}



message GetUserRequest {
  string userId = 1;
}

message GetUserByEmailRequest {
  string email = 1;
}

message UpdateUserStatusRequest {
  string userId = 1;
  string lastSeen = 2;
}

message GetUserContactsRequest {
  string userId = 1;
  optional string name = 2;
}

message UpdateUserRequest {
  string userId = 1;
  optional string firstName = 2;
  optional string lastName = 3;
  optional string email = 4;
  optional string phoneNumber = 5;
  optional string avatarUrl = 6;
  optional Address address = 7;
}

// üì§ RESPONSE MESSAGES

message BusinessUser {
  string businessUserId = 1;
  string userId = 2;
  string email = 3;
  string phoneNumber = 4;
  string organizationId = 5;
  string accessType = 6;
  int32 accessLevel = 7;
  bool isActive = 8;
  optional string notes = 9;
}

message BusinessUserResponse {
  bool success = 1;
  optional string error = 2;
  optional BusinessUser businessUser = 3;
}

message UserResponse {
  bool success = 1;
  optional string error = 2;
  optional User user = 3;
}

message GetUserByEmailResponse {
  bool success = 1;
  optional string error = 2;
  optional string message = 3;
  optional User user = 4;
}

message UpdateUserStatusResponse {
  bool success = 1;
  optional string error = 2;
  optional BasicUser user = 3;
}

message GetUserContactsResponse {
  bool success = 1;
  optional string error = 2;
  repeated Contact contacts = 3;
  int32 totalCount = 4;
}

message UpdateUserResponse {
  bool success = 1;
  optional string error = 2;
  optional BasicUser user = 3;
}

// üèóÔ∏è DATA MODELS

message User {
  string userId = 1;
  string email = 2;
  optional string username = 3;
  optional string firstName = 4;
  optional string lastName = 5;
  optional string phoneNumber = 6;
  optional string avatarUrl = 7;
  optional string lastSeen = 8;
  string createdAt = 9;
  string updatedAt = 10;
  bool emailVerified = 11;
  optional Address address = 12;
  optional UserRole userRole = 13;
  optional BusinessUser businessUser = 14;
}

message BasicUser {
  string userId = 1;
  string email = 2;
  optional string username = 3;
  optional string firstName = 4;
  optional string lastName = 5;
  optional string phoneNumber = 6;
  optional string lastSeen = 7;
  string createdAt = 8;
  string updatedAt = 9;
  bool emailVerified = 10;
}

message Contact {
  string userId = 1;
  string email = 2;
  optional string username = 3;
  optional string firstName = 4;
  optional string lastName = 5;
  optional string avatarUrl = 6;
  optional string lastSeen = 7;
  bool emailVerified = 8;
}

message Address {
  optional string addressId = 1;
  optional string street = 2;
  optional string building = 3;
  optional string apartment = 4;
  optional string district = 5;
  optional string city = 6;
  optional string state = 7;
  optional string postalCode = 8;
  optional string country = 9;
  optional string landmark = 10;
  optional string directionUrl = 11;
  optional double latitude = 12;
  optional double longitude = 13;
}

message UserRole {
  string userRoleId = 1;
  string roleName = 2;
  bool isActive = 3;
}



enum SendOtpType {
  REGISTRATION = 0;
  SIGNIN = 1;
}
